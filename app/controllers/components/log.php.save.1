<?php
/**
 * Log components
 * @copyright   2010 (c) Greenpeace International
 * @author      remy.bertot@greenpeace.org
 * @package     app.controllers.components.log
 */
class LogComponent extends Object {
  var $autolog = false;
  var $success = true;
  var $authorized = true;
  //var $__UserLog; // user log model;

 /**
  * Initialize
  * @param object $controller Controller using this component
  * @return boolean Proceed with component usage (true), or fail (false)
  * @todo count ++ instead of insert if identical
  */
  function initialize(&$controller,$settings=array()){
    $this->Controller = &$controller;
    $this->__UserLog = ClassRegistry::init('UserLog');
    $this->Controller->UserLog = &$this->__UserLog;
    if ($this->autolog) {
      $this->log();
    }
  }

  /**
   * Use UserLog model to create a log entry
   * @return void
   */
  function log() {
    if (Configure::read('App.logs.controllers.enabled')) {
      $logRules = Configure::read('App.logs.controllers.rules');
      foreach ($logRules as $rules => $verbose) {
        // log if there is matching rule
        if (!$verbose) continue;
        if (Common::requestAllowed($this->Controller->name, $this->Controller->action,$rules)) {
          $this->__UserLog->data =  $this->__getDataForLogs($verbose);
          $this->__UserLog->save($this->__UserLog->data,false);
          // log only once
          break;
        }
      }
    }
  }

  /**
   * Get the parameters given in Url
   * @return string url parameters
   * @access private
   */
  function __getDataForLogs($verbose=1){
    $data = array(
      'user_id' => User::get('id'),
      'ip' => $this->Controller->RequestHandler->getClientIP(),
      'resource_type' => 'controller',
      'resource' => strtolower($this->Controller->name),
      'action' => $this->Controller->action,
      'get_data_url' => implode(DS,$this->Controller->params['pass']),
      'authorized' => $this->authorized,
      'success' => $this->success
    );
    if ($verbose == 2) {
      $data['post_data'] = print_r($this->Controller->data,true);
    } elseif($verbose == 1) {
      $data['post_data'] = count($this->Controller->data);
    }
    //$data['resource_id'] = $value;
    $data['get_data_url'] = implode(DS,$this->Controller->params['pass']);
    $data['get_data_named'] = '';
    foreach ($this->Controller->params['named'] as $key => $value) {
      $data['get_data_named'] .=  $key . ':' . $value . DS;
    }
    return $data;
  }
}//_EOF
